{
  "gen": {
    "call/4": "s",
    "reply/2": "s",
    "start/5": "s",
    "start/6": "s"
  },
  "io_lib": {
    "format/2": "s"
  },
  "elixir_utils": {
    "change_posix_time/2": "s",
    "change_universal_time/2": "s",
    "read_file_type/1": "s",
    "read_file_type/2": "s",
    "read_link_type/1": "s"
  },
  "gen_server": {
    "call/2": "s",
    "cast/2": "s",
    "multi_call/4": "s"
  },
  "filelib": {
    "safe_relative_path/2": "s",
    "wildcard/2": "s"
  },
  "rand": {
    "uniform/0": "d",
    "uniform/1": "d"
  },
  "filename": {
    "basename/1": "p",
    "basename/2": "p",
    "dirname/1": "p",
    "extension/1": "p",
    "rootname/1": "p",
    "rootname/2": "p",
    "split/1": "p"
  },
  "elixir_errors": {
    "log_and_print_warning/4": "s",
    "parse_error/5": "s",
    "warning_prefix/0": "s"
  },
  "re": {
    "compile/1": "p",
    "compile/2": "p",
    "inspect/2": "p",
    "run/3": "p",
    "version/0": "p"
  },
  "elixir_module": {
    "compile/4": "s",
    "compiler_modules/0": "s",
    "data_tables/1": "s",
    "file/1": "s",
    "is_open/1": "s",
    "mode/1": "s",
    "next_counter/1": "s"
  },
  "elixir_erl_clauses": {
    "match/4": "s"
  },
  "unicode_util": {
    "gc/1": "p"
  },
  "erl_eval": {
    "expr/3": "s"
  },
  "elixir_dispatch": {
    "expand_import/7": "s",
    "expand_require/6": "s"
  },
  "elixir_tokenizer": {
    "tokenize/4": "s"
  },
  "math": {
    "pow/2": "p"
  },
  "elixir_import": {
    "special_form/2": "s"
  },
  "elixir_def": {
    "reset_last/1": "s",
    "take_definition/2": "s"
  },
  "code": {
    "add_patha/1": "s",
    "add_pathz/1": "s",
    "del_path/1": "s",
    "ensure_loaded/1": "s",
    "get_object_code/1": "s",
    "lib_dir/1": "s",
    "which/1": "s"
  },
  "maps": {
    "find/2": "p",
    "fold/3": "p",
    "from_keys/2": "p",
    "from_list/1": "p",
    "get/2": "d",
    "is_key/2": "p",
    "iterator/1": "p",
    "keys/1": "p",
    "map/2": "p",
    "merge/2": "p",
    "next/1": "p",
    "remove/2": "p",
    "take/2": "p",
    "to_list/1": "p",
    "update/3": "p",
    "values/1": "p"
  },
  "elixir_rewrite": {
    "erl_to_ex/3": "s"
  },
  "uri_string": {
    "parse/1": "p"
  },
  "init": {
    "get_argument/1": "s",
    "restart/0": "s",
    "stop/1": "s"
  },
  "_metadata": {
    "bifs_generated_at": "2025-10-19T15:59:42.773958Z",
    "description": "Complete Erlang stdlib BIF registry",
    "explicit_reviewed_at": "2025-10-19T16:00:00Z",
    "generated_at": "2025-10-19T16:45:16.531164Z",
    "note": "This file is auto-generated. Do not edit manually. Update .effects/explicit.json instead.",
    "source_bifs": ".effects/bifs.json",
    "source_explicit": ".effects.explicit.json",
    "total_functions": 385,
    "total_modules": 48
  },
  "elixir_overridable": {
    "overridable_for/2": "s",
    "overridables_for/1": "s",
    "record_overridable/4": "s"
  },
  "application": {
    "ensure_all_started/2": "s",
    "ensure_started/2": "s",
    "get_all_env/1": "s",
    "get_all_key/1": "s",
    "get_application/1": "s",
    "get_env/2": "d",
    "get_env/3": "d",
    "get_key/2": "s",
    "load/1": "s",
    "loaded_applications/0": "s",
    "set_env/2": "s",
    "set_env/4": "s",
    "start/2": "s",
    "stop/1": "s",
    "unload/1": "s",
    "unset_env/3": "s",
    "which_applications/1": "s"
  },
  "elixir_env": {
    "env_to_ex/1": "s",
    "trace/2": "s"
  },
  "elixir_config": {
    "get/1": "d",
    "get/2": "d",
    "put/2": "s",
    "serial/1": "s",
    "update/2": "s",
    "warn/2": "s"
  },
  "elixir_erl_pass": {
    "translate/3": "s"
  },
  "elixir_locals": {
    "yank/2": "s"
  },
  "erlang": {
    "and/2": "p",
    ">/2": "p",
    "binary_part/3": "e",
    "trunc/1": "p",
    "make_ref/0": "d",
    "group_leader/0": "s",
    "setelement/3": "e",
    "=</2": "p",
    "send_after/3": "s",
    "spawn_opt/4": "s",
    "process_flag/2": "s",
    "//2": "e",
    "system_info/1": "d",
    "list_to_integer/2": "e",
    "time_offset/0": "d",
    "is_port/1": "p",
    "atom_to_binary/1": "p",
    "append_element/2": "p",
    "port_info/1": "s",
    "or/2": "p",
    "map_size/1": "e",
    "is_bitstring/1": "p",
    "send_after/4": "s",
    "round/1": "p",
    "atom_to_list/1": "p",
    "is_float/1": "p",
    "send/2": "s",
    "whereis/1": "s",
    "++/2": "p",
    "unlink/1": "s",
    "tuple_to_list/1": "p",
    "ceil/1": "p",
    "is_boolean/1": "p",
    "self/0": "d",
    "+/1": "p",
    "binary_to_atom/2": "e",
    "is_number/1": "p",
    "monitor/3": "s",
    "port_info/2": "s",
    "is_binary/1": "p",
    "ports/0": "d",
    "error/3": {
      "e": [
        "exn"
      ]
    },
    "cancel_timer/1": "s",
    "is_list/1": "p",
    "function_exported/3": "p",
    "tl/1": "e",
    "max/2": "p",
    "is_map/1": "p",
    "=/=/2": "p",
    "list_to_binary/1": "p",
    "binary_to_integer/2": "e",
    "is_function/2": "p",
    "monitor/2": "s",
    "register/2": "s",
    "convert_time_unit/3": "p",
    "port_command/3": "s",
    "make_tuple/2": "p",
    "link/1": "s",
    "put/2": "s",
    "insert_element/3": "e",
    "is_tuple/1": "p",
    "is_pid/1": "p",
    "error/2": {
      "e": [
        "exn"
      ]
    },
    "--/2": "p",
    "length/1": "p",
    "tuple_size/1": "e",
    "is_function/1": "p",
    "list_to_float/1": "e",
    "demonitor/2": "s",
    "group_leader/2": "s",
    "system_time/1": "d",
    "put_element/3": "e",
    "floor/1": "p",
    "'/='/2": "p",
    "not/1": "p",
    "list_to_integer/1": "e",
    "read_timer/1": "d",
    "processes/0": "d",
    "delete_element/2": "e",
    "fun_info/2": "p",
    "spawn_monitor/1": "s",
    ">=/2": "p",
    "binary_to_term/1": "e",
    "is_process_alive/1": "d",
    "iolist_to_binary/1": "e",
    "byte_size/1": "e",
    "throw/1": {
      "e": [
        "exn"
      ]
    },
    "erase/1": "s",
    "process_flag/3": "s",
    "spawn_link/3": "s",
    "spawn/1": "s",
    "spawn/3": "s",
    "unique_integer/1": "d",
    "div/2": "e",
    "spawn_link/1": "s",
    "process_info/2": "d",
    "bit_size/1": "e",
    "spawn_monitor/3": "s",
    "halt/1": "s",
    "=:=/2": "p",
    "binary_to_existing_atom/2": "e",
    "element/2": "e",
    "min/2": "p",
    "exit/2": {
      "e": [
        "exn"
      ]
    },
    "-/1": "p",
    "raise/3": {
      "e": [
        "exn"
      ]
    },
    "==/2": "p",
    "*/2": "p",
    "error/1": {
      "e": [
        "exn"
      ]
    },
    "send/3": "s",
    "registered/0": "d",
    "monotonic_time/0": "d",
    "monotonic_time/1": "d",
    "node/1": "d",
    "unregister/1": "s",
    "-/2": "p",
    "split_binary/2": "e",
    "open_port/2": "s",
    "is_map_key/2": "p",
    "spawn_opt/2": "s",
    "localtime/0": "d",
    "binary_to_float/1": "e",
    "time_offset/1": "d",
    "system_time/0": "d",
    "list_to_existing_atom/1": "e",
    "integer_to_binary/1": "p",
    "get_keys/1": "d",
    "apply/3": "s",
    "</2": "p",
    "list_to_tuple/1": "p",
    "is_reference/1": "p",
    "process_info/1": "d",
    "nodes/0": "d",
    "exit/1": {
      "e": [
        "exn"
      ]
    },
    "garbage_collect/1": "s",
    "list_to_atom/1": "e",
    "hd/1": "e",
    "port_connect/2": "s",
    "iolist_size/1": "e",
    "port_close/1": "s",
    "apply/2": "s",
    "binary_to_list/1": "p",
    "get_keys/0": "d",
    "+/2": "p",
    "binary_to_integer/1": "e",
    "hibernate/3": "s",
    "is_integer/1": "p",
    "rem/2": "e",
    "node/0": "d",
    "cancel_timer/2": "s",
    "is_atom/1": "p",
    "get/1": "d",
    "abs/1": "p",
    "get/0": "d"
  },
  "beam_lib": {
    "chunks/2": "s",
    "info/1": "s"
  },
  "elixir_compiler": {
    "quoted/3": "s",
    "string/3": "s"
  },
  "proc_lib": {
    "spawn/3": "s",
    "spawn_link/3": "s",
    "stop/3": "s"
  },
  "gen_event": {
    "delete_handler/3": "s",
    "which_handlers/1": "s"
  },
  "io": {
    "get_chars/3": "s",
    "get_line/2": "s",
    "getopts/1": "s",
    "put_chars/2": "s"
  },
  "string": {
    "find/2": "p",
    "join/2": "p",
    "replace/4": "p",
    "split/3": "p"
  },
  "ets": {
    "delete/2": "s",
    "insert/2": "s",
    "insert_new/2": "s",
    "lookup/2": "s",
    "lookup_element/3": "s",
    "member/2": "s",
    "select/2": "s",
    "take/2": "s",
    "update_element/3": "s"
  },
  "os": {
    "env/0": "d",
    "find_executable/1": "d",
    "getenv/0": "d",
    "getenv/1": "d",
    "getpid/0": "d",
    "putenv/2": "d",
    "set_signal/2": "d",
    "system_time/0": "d",
    "system_time/1": "d",
    "type/0": "d",
    "unsetenv/1": "d"
  },
  "file": {
    "change_group/2": "s",
    "change_mode/2": "s",
    "change_owner/2": "s",
    "close/1": "s",
    "copy/2": "s",
    "copy/3": "s",
    "del_dir/1": "s",
    "delete/1": "s",
    "format_error/1": "s",
    "get_cwd/0": "s",
    "get_cwd/1": "s",
    "list_dir/1": "s",
    "list_dir_all/1": "s",
    "make_dir/1": "s",
    "make_link/2": "s",
    "make_symlink/2": "s",
    "native_name_encoding/0": "s",
    "open/2": "s",
    "read/2": "s",
    "read_file/1": "s",
    "read_file_info/1": "s",
    "read_file_info/2": "s",
    "read_line/1": "s",
    "read_link/1": "s",
    "read_link_info/2": "s",
    "rename/2": "s",
    "set_cwd/1": "s",
    "write/2": "s",
    "write_file/3": "s",
    "write_file_info/3": "s"
  },
  "elixir": {
    "env_for_eval/1": "s",
    "eval_quoted/3": "s",
    "string_to_quoted!/5": "s",
    "string_to_tokens/5": "s",
    "tokens_to_quoted/3": "s"
  },
  "global": {
    "send/2": "s",
    "whereis_name/1": "s"
  },
  "elixir_quote": {
    "linify_with_context_counter/3": "s"
  },
  "lists": {
    "all/2": "p",
    "any/2": "p",
    "duplicate/2": "p",
    "filter/2": "p",
    "flatmap/2": "p",
    "flatten/1": "p",
    "flatten/2": "p",
    "foldl/3": "p",
    "foldr/3": "p",
    "foreach/2": "p",
    "keydelete/3": "p",
    "keyfind/3": "p",
    "keymember/3": "p",
    "keyreplace/4": "p",
    "keysort/2": "p",
    "keystore/4": "p",
    "keytake/3": "p",
    "map/2": "p",
    "mapfoldl/3": "p",
    "max/1": "p",
    "member/2": "p",
    "min/1": "p",
    "reverse/1": "p",
    "reverse/2": "p",
    "sort/1": "p",
    "sort/2": "p"
  },
  "elixir_erl": {
    "get_ann/1": "s",
    "scope/2": "s"
  },
  "binary": {
    "compile_pattern/1": "p",
    "copy/2": "p",
    "last/1": "p",
    "match/2": "p",
    "matches/2": "p",
    "replace/4": "p",
    "split/2": "p",
    "split/3": "p"
  },
  "unicode": {
    "characters_to_binary/1": "p",
    "characters_to_binary/3": "p",
    "characters_to_list/1": "p",
    "characters_to_nfc_binary/1": "p",
    "characters_to_nfc_list/1": "p",
    "characters_to_nfd_binary/1": "p",
    "characters_to_nfkc_binary/1": "p",
    "characters_to_nfkd_binary/1": "p"
  },
  "elixir_code_server": {
    "call/1": "s",
    "cast/1": "s"
  },
  "elixir_aliases": {
    "concat/1": "s",
    "expand_or_concat/2": "s",
    "safe_concat/1": "s"
  }
}