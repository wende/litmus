{
  "Elixir.Litmus.Types.Unification": {
    "apply_renaming/2": "u",
    "find_and_remove_label/2": "p",
    "occurs_check/3": "u",
    "occurs_in?/2": "p",
    "rename_bound_vars/3": "u",
    "unify/2": "u",
    "unify_effect/2": "u",
    "unify_effect_variable/3": "u",
    "unify_effects/3": "u",
    "unify_list/3": "u",
    "unify_pairs/3": "u",
    "unify_rows/5": "u",
    "unify_types/3": "u",
    "unify_variable/3": "u",
    "when/2": "u"
  },
  "rand": {
    "bytes/1": "s",
    "bytes_s/2": "s",
    "seed/0": "s",
    "seed/1": "s",
    "seed_s/1": "s",
    "uniform/0": "s",
    "uniform/1": "s",
    "uniform_s/1": "s"
  },
  "Elixir.Litmus.Stdlib": {
    "exception_whitelist/0": "u",
    "expand_rule/2": "u",
    "get_all_module_functions/1": "u",
    "get_exception_info/1": "u",
    "get_purity_level/1": "p",
    "get_termination/1": "u",
    "level_acceptable?/2": "u",
    "meets_level?/2": "u",
    "non_terminating_modules/0": "u",
    "terminates?/1": "p",
    "termination_blacklist/0": "u",
    "when/2": "u",
    "whitelist/0": "u",
    "whitelisted?/1": "u",
    "whitelisted_modules/0": "u"
  },
  "Elixir.Task": {
    "async/1": "s",
    "async/2": "s",
    "async/3": "s",
    "async_stream/2": "s",
    "async_stream/3": "s",
    "async_stream/4": "s",
    "await/1": "s",
    "await/2": "s",
    "shutdown/1": "s",
    "shutdown/2": "s",
    "start/1": "s",
    "start/2": "s",
    "start/3": "s",
    "start_link/1": "s",
    "start_link/2": "s",
    "start_link/3": "s",
    "yield/1": "s",
    "yield/2": "s"
  },
  "Elixir.Supervisor": {
    "count_children/1": "s",
    "delete_child/2": "s",
    "restart_child/2": "s",
    "restart_child/3": "s",
    "start_child/2": "s",
    "start_child/3": "s",
    "start_link/2": "s",
    "start_link/3": "s",
    "terminate_child/2": "s",
    "terminate_child/3": "s",
    "which_children/1": "s"
  },
  "Elixir.Litmus.TryCatch": {
    "analyze_beam/1": "u",
    "analyze_core_module/2": "u",
    "analyze_function_body/1": "u",
    "compile_abstract_to_core/2": "u",
    "exception_module?/1": "u",
    "extract_caught_from_clause/1": "u",
    "extract_caught_from_pattern/2": "u",
    "extract_caught_from_try/1": "u",
    "extract_core_erlang/1": "p",
    "extract_error_exceptions/1": "u",
    "extract_exception_class/1": "u",
    "walk_ast/2": "u",
    "walk_children/2": "u",
    "walk_clause/2": "u",
    "when/2": "u"
  },
  "Elixir.Litmus.Pure": {
    "check_exceptions_allowed/3": "u",
    "check_exceptions_in_allowed_list/2": "u",
    "check_purity/2": "u",
    "check_purity_with_analyzer/3": "u",
    "check_termination_with_analyzer/2": "u",
    "classify_exception_violation/2": "u",
    "classify_impurity/5": "u",
    "classify_non_termination/3": "p",
    "expand_alias/1": "p",
    "extract_call/1": "p",
    "extract_function_calls/1": "u",
    "get_exception_info_with_fallback/2": "u",
    "is_known_impure_stdlib?/1": "p",
    "list_calls/2": "u",
    "meets_purity_level?/2": "u",
    "raise_all_errors/6": "u",
    "raise_combined_error/4": "u",
    "raise_exception_error/3": "u",
    "raise_impurity_error/3": "u",
    "raise_purity_and_exception_error/5": "u",
    "raise_termination_error/2": "u",
    "when/2": "u"
  },
  "random": {
    "bytes/1": "s",
    "bytes_s/2": "s",
    "seed/0": "s",
    "seed/1": "s",
    "seed_s/1": "s",
    "uniform/0": "s",
    "uniform/1": "s",
    "uniform_s/1": "s"
  },
  "Elixir.SampleModule": {
    "conditional_effect/2": "s",
    "divide/2": {
      "e": [
        "exn"
      ]
    },
    "execute_task/1": "s",
    "get_first/1": {
      "e": [
        "exn"
      ]
    },
    "get_timestamp/0": "s",
    "log_message/2": "s",
    "pattern_match_effect/1": "u",
    "print_greeting/1": "s",
    "process_file/2": "u",
    "pure_add/2": "p",
    "pure_helper/1": "u",
    "pure_multiply/2": "p",
    "read_config/1": "s",
    "save_data/2": "s",
    "send_message/2": "s",
    "spawn_worker/1": "u",
    "store_in_cache/2": "s",
    "update_counter/0": "u"
  },
  "Elixir.String": {
    "to_string/1": "p",
    "trim_leading/1": "p",
    "upcase/0": "p",
    "upcase/1": "p",
    "pad_trailing/2": "p",
    "pad_leading/3": "p",
    "upcase/2": "p",
    "to_atom/1": "p",
    "slice/2": "p",
    "at/2": "p",
    "trim_leading/2": "p",
    "to_integer/2": "p",
    "trim/1": "p",
    "trim_trailing/2": "p",
    "downcase/1": "p",
    "replace/3": "p",
    "split/3": "p",
    "pad_trailing/3": "p",
    "length/1": "p",
    "trim/2": "p",
    "match?/2": "p",
    "pad_leading/2": "p",
    "to_charlist/1": "p",
    "to_float/1": "p",
    "split/2": "p",
    "valid?/1": "p",
    "capitalize/2": "p",
    "contains?/2": "p",
    "slice/3": "p",
    "last/1": "p",
    "to_integer/1": "p",
    "capitalize/1": "p",
    "first/1": "p",
    "downcase/2": "p",
    "reverse/1": "p",
    "trim_trailing/1": "p",
    "duplicate/2": "p",
    "split/1": "p",
    "starts_with?/2": "p",
    "replace/4": "p",
    "graphemes/1": "p",
    "ends_with?/2": "p"
  },
  "Elixir.Map": {
    "put/3": "p"
  },
  "Elixir.System": {
    "cmd/1": "s",
    "cmd/2": "s",
    "delete_env/1": "s",
    "get_env/1": "s",
    "get_env/2": "s",
    "halt/0": "s",
    "halt/1": "s",
    "monotonic_time/0": "s",
    "monotonic_time/1": "s",
    "os_time/0": "s",
    "os_time/1": "s",
    "put_env/2": "s",
    "put_env/3": "s",
    "stop/0": "s",
    "stop/1": "s",
    "system_time/0": "s",
    "system_time/1": "s",
    "unique_integer/0": "s",
    "unique_integer/1": "s"
  },
  "Elixir.Mix": {
    "compilers/0": "u",
    "debug/1": "u",
    "debug?/0": "p",
    "env/0": "u",
    "env/1": "u",
    "install/1": "u",
    "install/2": "u",
    "install?/0": "p",
    "installed?/0": "p",
    "path_for/1": "u",
    "raise/1": "u",
    "raise/2": "u",
    "shell/0": "u",
    "shell/1": "u",
    "start/0": "u",
    "start/2": "u",
    "stop/1": "u",
    "target/0": "u",
    "target/1": "u"
  },
  "Elixir.Litmus.Types.Effects": {
    "combine_effects/2": "u",
    "determine_specific_effect/3": "u",
    "extract_label/1": "p",
    "flatten_effect/1": "u",
    "from_list/1": "u",
    "from_mfa/1": "u",
    "has_effect?/2": "p",
    "is_pure?/1": "p",
    "remove_effect/2": "p",
    "remove_first/2": "u",
    "simplify/1": "p",
    "subeffect?/2": "p",
    "to_list/1": "p",
    "when/2": "u"
  },
  "Elixir.Litmus.Analyzer.ASTWalker": {
    "add_params_to_context/2": "u",
    "analyze_ast/1": "u",
    "analyze_definition/3": "p",
    "analyze_function/6": "u",
    "analyze_module/2": "u",
    "build_function_type/3": "u",
    "ensure_var_gen_started/0": "p",
    "extract_function_info/1": "p",
    "extract_module_name/1": "u",
    "fetch_module_ast/1": "u",
    "format_error/1": "p",
    "format_results/1": "u",
    "format_var/1": "u",
    "when/2": "u"
  },
  "Elixir.Litmus.MixProject": {
    "application/0": "u",
    "project/0": "u"
  },
  "Elixir.Agent": {
    "get/2": "s",
    "get/3": "s",
    "get_and_update/3": "s",
    "get_and_update/4": "s",
    "start/1": "s",
    "start/2": "s",
    "start/3": "s",
    "start_link/1": "s",
    "start_link/2": "s",
    "start_link/3": "s",
    "stop/1": "s",
    "stop/2": "s",
    "stop/3": "s",
    "update/2": "s",
    "update/3": "s",
    "update/4": "s"
  },
  "inet": {
    "getaddr/2": "s",
    "getaddrs/2": "s",
    "gethostname/0": "s",
    "getif/0": "s",
    "getif/1": "s",
    "getopts/1": "s",
    "getopts/2": "s",
    "getstat/1": "s",
    "getstat/2": "s",
    "setopts/2": "s"
  },
  "Elixir.Litmus.Effects.Registry.MissingStdlibEffectError": {
    "__struct__/0": "u",
    "__struct__/1": "u",
    "exception/1": "u",
    "message/1": "u"
  },
  "gen_udp": {
    "close/1": "s",
    "controlling_process/2": "s",
    "open/1": "s",
    "open/2": "s",
    "recv/2": "s",
    "recv/3": "s",
    "send/4": "s"
  },
  "Elixir.IO": {
    "binread/1": "s",
    "binread/2": "s",
    "binwrite/1": "s",
    "binwrite/2": "s",
    "getn/1": "s",
    "getn/2": "s",
    "gets/0": "s",
    "gets/1": "s",
    "gets/2": "s",
    "inspect/1": "s",
    "inspect/2": "s",
    "puts/1": "s",
    "puts/2": "s",
    "read/1": "s",
    "read/2": "s",
    "stream/1": "s",
    "stream/2": "s",
    "warn/1": "s",
    "warn/2": "s",
    "write/1": "s",
    "write/2": "s"
  },
  "ssl": {
    "accept/1": "s",
    "accept/2": "s",
    "close/1": "s",
    "connect/3": "s",
    "connect/4": "s",
    "controlling_process/2": "s",
    "listen/2": "s",
    "listen/3": "s",
    "recv/2": "s",
    "recv/3": "s",
    "send/2": "s"
  },
  "gen_tcp": {
    "accept/1": "s",
    "accept/2": "s",
    "close/1": "s",
    "connect/3": "s",
    "connect/4": "s",
    "controlling_process/2": "s",
    "listen/1": "s",
    "listen/2": "s",
    "recv/2": "s",
    "recv/3": "s",
    "send/2": "s"
  },
  "Elixir.Litmus.Inference.Bidirectional": {
    "check/4": "u",
    "check_if_branches/7": "u",
    "check_lambda/4": "p",
    "extract_param_name/1": "p",
    "generalize/2": "u",
    "handle_binary/4": "u",
    "handle_block/4": "u",
    "handle_case/5": "p",
    "handle_if/6": "u",
    "handle_lambda/4": "u",
    "handle_let/5": "u",
    "handle_list/4": "u",
    "handle_literal/4": "u",
    "handle_local_call/5": "u",
    "handle_map/4": "p",
    "handle_pipe/5": "u",
    "handle_remote_call/6": "u",
    "handle_tuple/4": "u",
    "handle_variable/4": "u",
    "infer_type/4": "u",
    "instantiate_type/1": "u",
    "remove_effect_prefix/2": "u",
    "resolve_module/1": "p",
    "synthesize/2": "u",
    "synthesize_if_branches/5": "u",
    "synthesize_lambda/2": "p",
    "when/2": "u"
  },
  "Elixir.Litmus": {
    "analyze_deps_for_exceptions/1": "u",
    "analyze_file/2": "u",
    "analyze_file_both/2": "u",
    "analyze_file_exceptions/2": "u",
    "analyze_file_termination/2": "u",
    "analyze_files/2": "u",
    "analyze_files_parallel/2": "u",
    "analyze_files_termination/2": "u",
    "build_call_graph/1": "u",
    "check_exception_call/3": "u",
    "elixirify_both_results/1": "u",
    "elixirify_opts/1": "u",
    "elixirify_purity/1": "u",
    "elixirify_results/1": "u",
    "elixirify_termination/1": "u",
    "elixirify_termination_results/1": "u",
    "erlify_purity/1": "u",
    "iterate_exception_propagation/2": "u",
    "maps_equal?/2": "p",
    "propagate_exceptions/2": "u",
    "pure_stdlib?/1": "u",
    "safe_to_optimize?/2": "u",
    "subtract_caught_exceptions/2": "u",
    "when/2": "u"
  },
  "Elixir.Litmus.Effects.Registry": {
    "all_effects/0": "u",
    "effect?/1": "u",
    "effect_category/1": "u",
    "effect_module?/1": "p",
    "effect_modules/0": "u",
    "effect_type/1": "u",
    "effects_map/0": "u",
    "permissive_mode?/0": "u",
    "set_permissive_mode/1": "u",
    "stdlib_function?/1": "u"
  },
  "_metadata": {
    "generated_at": "2025-10-18T13:44:50.130482Z",
    "litmus_version": "0.1.0",
    "total_functions": 812
  },
  "Elixir.Litmus.Exceptions": {
    "can_raise?/2": "p",
    "can_throw_or_exit?/1": "u",
    "empty/0": "u",
    "empty_errors?/1": "u",
    "error_dynamic/0": "u",
    "merge/2": "u",
    "merge_errors/2": "u",
    "non_error/0": "u",
    "pure?/1": "u",
    "subtract/2": "u",
    "subtract_errors/2": "u",
    "when/2": "u"
  },
  "Elixir.Port": {
    "call/2": "s",
    "call/3": "s",
    "close/1": "s",
    "command/2": "s",
    "command/3": "s",
    "connect/2": "s",
    "controlling_process/2": "s",
    "info/1": "s",
    "info/2": "s",
    "open/2": "s",
    "open/3": "s"
  },
  "Elixir.Litmus.Effects.Transformer": {
    "contains_effect?/2": "u",
    "effect?/2": "u",
    "extract_call/2": "p",
    "extract_effect/2": "u",
    "resolve_module/1": "p",
    "should_track_effect?/2": "u",
    "transform_block/2": "u",
    "transform_branch_with_binding/4": "u",
    "transform_branch_with_continuation/3": "u",
    "transform_sequence/3": "u",
    "when/2": "u"
  },
  "Elixir.Application": {
    "delete_env/2": "s",
    "delete_env/3": "s",
    "get_env/2": "s",
    "get_env/3": "s",
    "load/1": "s",
    "load/2": "s",
    "put_env/3": "s",
    "put_env/4": "s",
    "start/1": "s",
    "start/2": "s",
    "start/3": "s",
    "stop/1": "s",
    "unload/1": "s"
  },
  "Elixir.Litmus.Effects": {
    "apply_effect/1": "u"
  },
  "Elixir.Litmus.Registry.Builder": {
    "analyze_module/1": "u",
    "analyze_module_from_beam/1": "u",
    "build_registry/1": "u",
    "discover_modules/1": "u",
    "effect_to_json/1": "u",
    "export_to_json/2": "u",
    "get_module_exports/1": "u",
    "get_source_file/1": "u",
    "infer_effect_from_name/3": "u",
    "is_elixir_stdlib?/1": "u",
    "is_stdlib_module?/1": "u",
    "merge_with_existing/2": "u",
    "string_to_module/1": "u",
    "when/2": "u"
  },
  "erlang": {
    "send_after/3": "s",
    "spawn_opt/4": "s",
    "process_flag/2": "s",
    "time_offset/0": "s",
    "send_after/4": "s",
    "send/2": "s",
    "whereis/1": "s",
    "unlink/1": "s",
    "spawn/2": "s",
    "monitor/3": "s",
    "cancel_timer/1": "s",
    "monitor/2": "s",
    "register/2": "s",
    "port_command/3": "s",
    "link/1": "s",
    "now/0": "s",
    "demonitor/2": "s",
    "system_time/1": "s",
    "spawn_opt/3": "s",
    "spawn_monitor/1": "s",
    "process_flag/3": "s",
    "spawn_link/3": "s",
    "universaltime/0": "s",
    "spawn/1": "s",
    "spawn/3": "s",
    "spawn_link/1": "s",
    "timestamp/0": "s",
    "spawn_monitor/3": "s",
    "spawn_link/2": "s",
    "send/3": "s",
    "spawn_monitor/2": "s",
    "monotonic_time/0": "s",
    "monotonic_time/1": "s",
    "unregister/1": "s",
    "open_port/2": "s",
    "spawn_opt/2": "s",
    "localtime/0": "s",
    "time_offset/1": "s",
    "system_time/0": "s",
    "port_command/2": "s",
    "port_connect/2": "s",
    "port_close/1": "s",
    "demonitor/1": "s"
  },
  "Elixir.GenServer": {
    "call/2": "s",
    "call/3": "s",
    "cast/2": "s",
    "start/2": "s",
    "start/3": "s",
    "start/4": "s",
    "start_link/2": "s",
    "start_link/3": "s",
    "start_link/4": "s",
    "stop/1": "s",
    "stop/2": "s",
    "stop/3": "s"
  },
  "Elixir.Litmus.Analyzer.EffectTracker": {
    "add_effect_metadata/2": "p",
    "analyze_effects/1": "u",
    "annotate_effects/1": "u",
    "compare_effects/2": "u",
    "effect_for_call/1": "u",
    "extract_call/1": "p",
    "extract_calls/1": "u",
    "find_effectful_nodes/1": "u",
    "get_cached_effect/3": "u",
    "is_effectful_node?/1": "u",
    "is_pure?/1": "u",
    "node_effect/2": "u",
    "node_id/1": "u",
    "resolve_module/1": "p",
    "suggest_handler_for_label/1": "u",
    "suggest_handlers/1": "u",
    "update_context/3": "u",
    "when/2": "u"
  },
  "Elixir.Enum": {
    "dedup/1": "p",
    "count/2": "u",
    "reduce/1": "p",
    "reduce/2": "u",
    "join/2": "p",
    "uniq_by/2": "u",
    "drop_while/2": "u",
    "min_by/2": "u",
    "group_by/2": "u",
    "map_join/2": "u",
    "zip_with/3": "u",
    "fetch/2": "p",
    "max_by/2": "u",
    "sort_by/2": "u",
    "all?/2": "u",
    "drop/2": "p",
    "reject/2": "u",
    "split_while/2": "u",
    "uniq/1": "p",
    "sort/1": "p",
    "scan/2": "u",
    "reverse/2": "p",
    "reduce/3": "u",
    "slice/2": "p",
    "zip_with/2": "u",
    "at/2": "p",
    "sum/1": "p",
    "into/3": "p",
    "with_index/2": "u",
    "max/2": "p",
    "find/3": "u",
    "min/1": "p",
    "with_index/1": "p",
    "fetch!/2": "p",
    "max_by/4": "u",
    "sort/2": "u",
    "find/2": "u",
    "to_list/1": "p",
    "into/2": "p",
    "concat/2": "p",
    "each/2": "u",
    "split/2": "p",
    "sort_by/3": "u",
    "empty?/1": "p",
    "member?/2": "p",
    "slice/3": "p",
    "take/2": "p",
    "min_by/4": "u",
    "max/3": "p",
    "max/1": "p",
    "count/1": "p",
    "min/2": "p",
    "join/1": "p",
    "map/1": "p",
    "map/2": "u",
    "reduce_while/3": "u",
    "any?/1": "p",
    "filter/1": "p",
    "filter/2": "u",
    "all?/1": "p",
    "group_by/3": "u",
    "concat/1": "p",
    "dedup_by/2": "u",
    "min/3": "p",
    "at/3": "p",
    "scan/3": "u",
    "any?/2": "u",
    "reverse/1": "p",
    "chunk_every/4": "p",
    "zip/1": "p",
    "map_join/3": "u",
    "flat_map/2": "u",
    "take_while/2": "u",
    "zip/2": "p",
    "min_by/3": "u",
    "map_reduce/3": "u",
    "max_by/3": "u",
    "chunk_every/2": "p",
    "chunk_every/3": "p"
  },
  "ets": {
    "delete/1": "s",
    "delete/2": "s",
    "delete_all_objects/1": "s",
    "info/1": "s",
    "info/2": "s",
    "insert/2": "s",
    "lookup/2": "s",
    "match/2": "s",
    "match/3": "s",
    "new/1": "s",
    "new/2": "s",
    "rename/2": "s",
    "select/2": "s",
    "select/3": "s",
    "tab2list/1": "s"
  },
  "os": {
    "cmd/1": "s",
    "cmd/2": "s",
    "getenv/1": "s",
    "getenv/2": "s",
    "putenv/2": "s",
    "system_time/0": "s",
    "system_time/1": "s",
    "unsetenv/1": "s"
  },
  "Elixir.File": {
    "dir?/1": "s",
    "read/2": "s",
    "write/3": "s",
    "write!/3": "s",
    "rm/1": "s",
    "chmod/2": "s",
    "write/2": "s",
    "touch/2": "s",
    "cp_r/2": "s",
    "mkdir_p/2": "s",
    "stream!/3": "s",
    "mkdir/2": "s",
    "stream!/2": "s",
    "read!/1": "s",
    "ls/0": "s",
    "read!/2": "s",
    "cp/2": "s",
    "open/3": "s",
    "open/1": "s",
    "ls/1": "s",
    "mkdir_p/1": "s",
    "regular?/1": "s",
    "chown/2": "s",
    "close/1": "s",
    "cp_r/3": "s",
    "stream!/1": "s",
    "open/2": "s",
    "rm_rf/1": "s",
    "write!/2": "s",
    "touch/1": "s",
    "cp/3": "s",
    "read/1": "s",
    "exists?/1": "s",
    "mkdir/1": "s",
    "stat/1": "s"
  },
  "Elixir.Litmus.Inference.Context": {
    "add_effect/2": "u",
    "apply_substitution/2": "u",
    "empty/0": "u",
    "enter_scope/1": "u",
    "exit_scope/1": "u",
    "format/1": "u",
    "free_variables/1": "u",
    "get_effects/1": "u",
    "merge/2": "u",
    "when/2": "u",
    "with_stdlib/0": "u"
  },
  "Elixir.Kernel": {
    "./1": "p",
    "{}/3": "p",
    "<>/2": "p",
    "and/2": "p",
    "for/1": "p",
    "unquote/1": "p",
    ">/2": "p",
    "__block__/3": "p",
    "binary_part/3": {
      "e": [
        "exn"
      ]
    },
    "trunc/1": "p",
    "&&/2": "p",
    "sigil_S/2": "p",
    "//2": "p",
    "execute_task/1": "u",
    "put_elem/3": {
      "e": [
        "exn"
      ]
    },
    "is_port/1": "p",
    "__block__/8": "p",
    "rescue/1": "p",
    "or/2": "p",
    "%{}/1": "p",
    "sigil_w/2": "p",
    "map_size/1": {
      "e": [
        "exn"
      ]
    },
    "is_bitstring/1": "p",
    "receive/1": "s",
    "<<>>/5": "p",
    "round/1": "p",
    "is_float/1": "p",
    "./2": "p",
    "send/2": "s",
    "inspect/2": "p",
    "catch/1": "p",
    "spawn/2": "s",
    "ceil/1": "p",
    "is_boolean/1": "p",
    "self/0": "p",
    "+/1": "p",
    "case/2": "p",
    "is_number/1": "p",
    "!/1": "p",
    "<<>>/2": "p",
    "is_binary/1": "p",
    "@/1": "p",
    "is_list/1": "p",
    "try/1": "p",
    "tl/1": {
      "e": [
        "exn"
      ]
    },
    "__block__/2": "p",
    "max/2": "p",
    "put_in/2": "p",
    "raise/2": {
      "e": [
        "exn"
      ]
    },
    "<<>>/3": "p",
    "is_map/1": "p",
    "is_function/2": "p",
    "__block__/9": "p",
    "__block__/11": "p",
    "update_in/2": "p",
    "__block__/15": "p",
    "reraise/3": {
      "e": [
        "exn"
      ]
    },
    "is_tuple/1": "p",
    "is_pid/1": "p",
    "length/1": "p",
    "reraise/2": {
      "e": [
        "exn"
      ]
    },
    "after/1": "p",
    "is_nil/1": "p",
    "->/2": "p",
    "unless/2": "p",
    "in/2": "p",
    "tuple_size/1": {
      "e": [
        "exn"
      ]
    },
    "is_function/1": "p",
    "match?/2": "p",
    "../2": "p",
    "to_charlist/1": "p",
    "floor/1": "p",
    "not/1": "p",
    "__block__/13": "p",
    "to_string/1": "p",
    "<<>>/4": "p",
    "__aliases__/1": "p",
    "elem/2": {
      "e": [
        "exn"
      ]
    },
    "sigil_r/2": "p",
    "spawn_monitor/1": "s",
    "if/2": "p",
    ">=/2": "p",
    "byte_size/1": {
      "e": [
        "exn"
      ]
    },
    "throw/1": {
      "e": [
        "exn"
      ]
    },
    "__block__/10": "p",
    "__block__/6": "p",
    "spawn_link/3": "s",
    "__block__/14": "p",
    "spawn/1": "s",
    "spawn/3": "s",
    "div/2": {
      "e": [
        "exn"
      ]
    },
    "<=/2": "p",
    "unquote_splicing/1": "p",
    "spawn_link/1": "s",
    "!==/2": "p",
    "bit_size/1": {
      "e": [
        "exn"
      ]
    },
    "spawn_monitor/3": "s",
    "::/2": "p",
    "sigil_R/2": "p",
    "!=/2": "p",
    "min/2": "p",
    "sigil_C/2": "p",
    "-/1": "p",
    "spawn_link/2": "s",
    "get_in/2": "p",
    "==/2": "p",
    "*/2": "p",
    "+/2": "p",
    "raise/1": {
      "e": [
        "exn"
      ]
    },
    "quote/2": "p",
    "with/1": "p",
    "else/1": "p",
    "=/2": "p",
    "spawn_monitor/2": "s",
    "__block__/7": "p",
    "||/2": "p",
    "&/1": "p",
    "-/2": "p",
    "%/2": "p",
    "for/2": "p",
    "quote/1": "p",
    "|>/2": "p",
    "apply/3": "s",
    "</2": "p",
    "is_reference/1": "p",
    "cond/1": "p",
    "exit/1": {
      "e": [
        "exn"
      ]
    },
    "inspect/1": "p",
    "sigil_c/2": "p",
    "fn/1": "p",
    "hd/1": {
      "e": [
        "exn"
      ]
    },
    "__block__/5": "p",
    "binary_part/2": {
      "e": [
        "exn"
      ]
    },
    "__block__/4": "p",
    "sigil_s/2": "p",
    "apply/2": "s",
    "+/2": "p",
    "is_integer/1": "p",
    "rem/2": {
      "e": [
        "exn"
      ]
    },
    "node/0": "p",
    "===/2": "p",
    "sigil_W/2": "p",
    "is_atom/1": "p",
    "abs/1": "p",
    "__block__/12": "p"
  },
  "Elixir.Litmus.Inference.Bidirectional.VarGen": {
    "fresh_effect_var/0": "u",
    "fresh_type_var/0": "u"
  },
  "dets": {
    "close/1": "s",
    "delete/2": "s",
    "info/1": "s",
    "info/2": "s",
    "insert/2": "s",
    "lookup/2": "s",
    "match/2": "s",
    "match/3": "s",
    "open_file/1": "s",
    "open_file/2": "s",
    "select/2": "s",
    "select/3": "s",
    "sync/1": "s"
  },
  "Elixir.Code": {
    "compile_file/1": "s",
    "compile_file/2": "s",
    "compile_string/1": "s",
    "compile_string/2": "s",
    "eval_file/1": "s",
    "eval_file/2": "s",
    "eval_string/1": "s",
    "eval_string/2": "s",
    "load_file/1": "s",
    "load_file/2": "s",
    "require_file/1": "s",
    "require_file/2": "s"
  },
  "Elixir.Hex": {
    "elixir_version/0": "u",
    "otp_version/0": "u",
    "start/0": "u",
    "start/2": "u",
    "stop/0": "u",
    "version/0": "u"
  },
  "Elixir.Litmus.Pure.ImpurityError": {
    "__struct__/0": "u",
    "__struct__/1": "u",
    "exception/1": "u",
    "message/1": "u"
  },
  "Elixir.Litmus.Types.Substitution": {
    "add/3": "u",
    "apply_subst/2": "u",
    "apply_to_env/2": "u",
    "compose/2": "u",
    "domain/1": "u",
    "empty/0": "u",
    "format/1": "u",
    "format_var/1": "u",
    "idempotent?/1": "u",
    "make_idempotent/1": "u",
    "range_vars/1": "u",
    "remove/2": "u",
    "restrict/2": "u",
    "when/2": "u"
  },
  "Elixir.Process": {
    "cancel_timer/1": "s",
    "demonitor/1": "s",
    "demonitor/2": "s",
    "exit/1": "s",
    "exit/2": "s",
    "flag/2": "s",
    "flag/3": "s",
    "link/1": "s",
    "monitor/2": "s",
    "register/2": "s",
    "send/2": "s",
    "send/3": "s",
    "send_after/3": "s",
    "send_after/4": "s",
    "spawn/1": "s",
    "spawn/2": "s",
    "spawn/3": "s",
    "spawn_link/1": "s",
    "spawn_link/2": "s",
    "spawn_link/3": "s",
    "spawn_monitor/1": "s",
    "spawn_monitor/2": "s",
    "spawn_monitor/3": "s",
    "unlink/1": "s",
    "unregister/1": "s",
    "whereis/1": "s"
  },
  "Elixir.Litmus.Types.Core": {
    "contains_variables?/1": "p",
    "empty_effect/0": "u",
    "extract_effect_labels/1": "u",
    "format_compact_effect/1": "u",
    "format_effect/1": "u",
    "format_effect_tail/1": "u",
    "format_type/1": "u",
    "free_variables/2": "u",
    "function_type/3": "u",
    "has_side_effects?/1": "u",
    "monomorphic?/1": "u",
    "to_compact_effect/1": "u",
    "when/2": "u"
  },
  "Elixir.Demo": {
    "add/2": "p",
    "greet/1": "s",
    "head_of_list/1": {
      "e": [
        "exn"
      ]
    },
    "log_and_save/2": "s",
    "multiply/2": "p",
    "other_module_effectful/0": "u",
    "other_module_exception/0": "u",
    "other_module_higher_order_effectful/0": "u",
    "other_module_higher_order_pure/0": "u",
    "other_module_pure/0": "u",
    "read_file/1": "s",
    "spawn_task/1": "s",
    "square/1": "p",
    "sum_list/1": "u",
    "uppercase/1": "u",
    "write_file/2": "s"
  },
  "Elixir.Litmus.Effects.UnhandledError": {
    "exception/1": "u",
    "format_message/3": "u"
  },
  "Elixir.Logger": {
    "add_backend/2": "s",
    "configure/1": "s",
    "configure/2": "s",
    "debug/1": "s",
    "debug/2": "s",
    "debug/3": "s",
    "error/1": "s",
    "error/2": "s",
    "error/3": "s",
    "info/1": "s",
    "info/2": "s",
    "info/3": "s",
    "log/2": "s",
    "log/3": "s",
    "log/4": "s",
    "remove_backend/1": "s",
    "remove_backend/2": "s",
    "warn/1": "s",
    "warn/2": "s",
    "warn/3": "s"
  }
}